{"ast":null,"code":"import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nimport { emailSignInFailure, emailSignInSuccess, googleSignInFailure, googleSignInSuccess } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* signInWithEmail(emailAndPassword) {\n  console.log(emailAndPassword);\n  const {\n    email,\n    password\n  } = emailAndPassword;\n\n  try {\n    const user = yield signInWithEmailAndPassword(auth, email, password);\n    console.log(user);\n    yield put(emailSignInSuccess(user));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart(emailAndPassword) {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail(emailAndPassword));\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/user/user.sagas.js"],"names":["signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","googleProvider","emailSignInFailure","emailSignInSuccess","googleSignInFailure","googleSignInSuccess","UserActionTypes","signInWithGoogle","user","userRef","userSnapshot","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","emailAndPassword","console","log","email","password","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,eAArC,QAA4D,eAA5D;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAKA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAKO,gBALP;AAMA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,eAAe,CAACM,IAAD,EAAOE,cAAP,CAAtC;AACA,UAAMQ,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMhB,MAAM,CAACe,OAAD,CAAjC;AACA,UAAMZ,GAAG,CACPQ,mBAAmB,CAAC;AAAEM,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACO,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMhB,UAAU,CAACQ,eAAe,CAACS,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;;AAED,UAAUS,eAAV,CAA0BC,gBAA1B,EAA4C;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,gBAA5B;;AACA,MAAI;AACF,UAAMT,IAAI,GAAG,MAAMhB,0BAA0B,CAACO,IAAD,EAAOqB,KAAP,EAAcC,QAAd,CAA7C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,UAAMX,GAAG,CAACM,kBAAkB,CAACK,IAAD,CAAnB,CAAT;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACK,kBAAkB,CAACW,KAAD,CAAnB,CAAT;AACD;AACF;;AAED,OAAO,UAAUS,kBAAV,CAA6BL,gBAA7B,EAA+C;AACpD,QAAMnB,UAAU,CACdQ,eAAe,CAACiB,mBADF,EAEdP,eAAe,CAACC,gBAAD,CAFD,CAAhB;AAID;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\nimport {\n  emailSignInFailure,\n  emailSignInSuccess,\n  googleSignInFailure,\n  googleSignInSuccess,\n} from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\n\nfunction* signInWithGoogle() {\n  try {\n    const { user } = yield signInWithPopup(auth, googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* signInWithEmail(emailAndPassword) {\n  console.log(emailAndPassword)\n  const { email, password } = emailAndPassword;\n  try {\n    const user = yield signInWithEmailAndPassword(auth, email, password);\n    console.log(user);\n    yield put(emailSignInSuccess(user));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart(emailAndPassword) {\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail(emailAndPassword)\n  );\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}