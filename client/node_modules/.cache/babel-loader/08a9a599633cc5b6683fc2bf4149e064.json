{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const {\n    user\n  } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  const {\n    user\n  } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser) {\n  try {\n    const userRef = yield call(createUserProfileDocument, authUser);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signupUser(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmailAndPassword(auth, email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/user/user.sagas.js"],"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","googleProvider","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","signOut","signInWithGoogle","user","getSnapshotFromUserauth","signInWithEmail","payload","email","password","authUser","userRef","userSnapshot","id","data","error","isUserAuthenticated","userAuth","logUserOut","signupUser","displayName","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,8BAAT,EAAyCC,0BAAzC,EAAqEC,eAArE,QAA4F,eAA5F;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,+BALP;AAMA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,aANF,QAOO,gBAPP;AAQA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMnB,eAAe,CAACM,IAAD,EAAOE,cAAP,CAAtC;AACA,QAAMY,uBAAuB,CAACD,IAAD,CAA7B;AACD;;AAED,UAAUE,eAAV,OAA4D;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;AAC1D,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMpB,0BAA0B,CAACO,IAAD,EAAOiB,KAAP,EAAcC,QAAd,CAAjD;AACA,QAAMJ,uBAAuB,CAACD,IAAD,CAA7B;AACD;;AAED,UAAUC,uBAAV,CAAkCK,QAAlC,EAA4C;AAC1C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMvB,IAAI,CAACI,yBAAD,EAA4BkB,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAM1B,MAAM,CAACyB,OAAD,CAAjC;AACA,UAAMtB,GAAG,CAACO,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACM,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUC,mBAAV,GAAgC;AAC9B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMvB,cAAc,EAArC;;AACA,QAAI,CAACuB,QAAL,EAAe;AACb;AACD;;AACD,UAAMZ,uBAAuB,CAACY,QAAD,CAA7B;AACD,GAND,CAME,OAAOF,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACM,aAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUuB,UAAV,GAAuB;AAC5B,MAAI;AACF,UAAMhB,OAAO,CAACX,IAAD,CAAb;AACA,UAAMF,GAAG,CAACS,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOiB,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACQ,cAAc,CAACkB,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUI,UAAV,QAAiE;AAAA,MAA5C;AAACZ,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBW,MAAAA;AAAnB;AAAV,GAA4C;;AACtE,MAAI;AACF,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMrB,8BAA8B,CACnDQ,IADmD,EAEnDiB,KAFmD,EAGnDC,QAHmD,CAArD;AAKA,UAAMjB,yBAAyB,CAACY,IAAD,EAAO;AAAEgB,MAAAA;AAAF,KAAP,CAA/B;AACA,UAAM/B,GAAG,CAACW,aAAa,EAAd,CAAT;AACD,GARD,CAQE,OAAOe,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACU,aAAa,CAACgB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAM/B,UAAU,CAACW,eAAe,CAACqB,oBAAjB,EAAuCnB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUoB,kBAAV,GAA+B;AACpC,QAAMjC,UAAU,CAACW,eAAe,CAACuB,mBAAjB,EAAsClB,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUmB,kBAAV,GAA+B;AACpC,QAAMnC,UAAU,CAACW,eAAe,CAACyB,kBAAjB,EAAqCV,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUW,cAAV,GAA2B;AAChC,QAAMrC,UAAU,CAACW,eAAe,CAAC2B,cAAjB,EAAiCV,UAAjC,CAAhB;AACD;AAED,OAAO,UAAUW,aAAV,GAA0B;AAC/B,QAAMvC,UAAU,CAACW,eAAe,CAAC6B,aAAjB,EAAgCX,UAAhC,CAAhB;AACD;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC3B,QAAM5C,GAAG,CAAC,CACRC,IAAI,CAACiC,mBAAD,CADI,EAERjC,IAAI,CAACmC,kBAAD,CAFI,EAGRnC,IAAI,CAACqC,kBAAD,CAHI,EAIRrC,IAAI,CAACuC,cAAD,CAJI,EAKRvC,IAAI,CAACyC,aAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess,\n} from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const { user } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n  const { user } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser) {\n  try {\n    const userRef = yield call(createUserProfileDocument, authUser);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signupUser({payload: { email, password, displayName}}) {\n  try {\n    const { user } = yield createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    yield createUserProfileDocument(user, { displayName });\n    yield put(signUpSuccess())\n  } catch (error) {\n    yield put(signUpFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}