{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db, transformCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionRef = collection(db, \"collections\");\n    const snapshot = yield getDocs(collectionRef); // const collectionsMap = transformCollectionsSnapshotToMap(snapshot);\n\n    const collectionsMap = yield call(transformCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport { fetchCollectionsAsync, fetchCollectionsStart };\nexport function* shopSagas() {\n  yield all([]);\n}","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/shop/shop.sagas.js"],"names":["ShopActionTypes","all","call","put","takeLatest","collection","getDocs","db","transformCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","snapshot","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SACEC,EADF,EAEEC,iCAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;;AAKA,UAAUC,qBAAV,GAAkC;AAChC,MAAI;AACF,UAAMC,aAAa,GAAGP,UAAU,CAACE,EAAD,EAAK,aAAL,CAAhC;AACA,UAAMM,QAAQ,GAAG,MAAMP,OAAO,CAACM,aAAD,CAA9B,CAFE,CAIF;;AACA,UAAME,cAAc,GAAG,MAAMZ,IAAI,CAC/BM,iCAD+B,EAE/BK,QAF+B,CAAjC;AAKA,UAAMV,GAAG,CAACO,uBAAuB,CAACI,cAAD,CAAxB,CAAT;AACD,GAXD,CAWE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACM,uBAAuB,CAACM,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;;AAED,UAAUC,qBAAV,GAAkC;AAChC,QAAMb,UAAU,CACdJ,eAAe,CAACkB,uBADF,EAEdP,qBAFc,CAAhB;AAID;;AAED,SAASA,qBAAT,EAAgCM,qBAAhC;AAEA,OAAO,UAAUE,SAAV,GAAsB;AAC3B,QAAMlB,GAAG,CAAC,EAAD,CAAT;AAGD","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport {\n  db,\n  transformCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionRef = collection(db, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n\n    // const collectionsMap = transformCollectionsSnapshotToMap(snapshot);\n    const collectionsMap = yield call(\n      transformCollectionsSnapshotToMap,\n      snapshot\n    );\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport { fetchCollectionsAsync, fetchCollectionsStart };\n\nexport function* shopSagas() {\n  yield all([\n    \n  ])\n}\n"]},"metadata":{},"sourceType":"module"}