{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const {\n    user\n  } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  const {\n    user\n  } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, authUser, additionalData);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signupUser(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmailAndPassword(auth, email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp(_ref3) {\n  let {\n    payload: {\n      user,\n      additionalData\n    }\n  } = _ref3;\n  yield getSnapshotFromUserauth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/user/user.sagas.js"],"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","googleProvider","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","signOut","signInWithGoogle","user","getSnapshotFromUserauth","signInWithEmail","payload","email","password","authUser","additionalData","userRef","userSnapshot","id","data","error","isUserAuthenticated","userAuth","logUserOut","signupUser","displayName","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess,\n} from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const { user } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n  const { user } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      authUser,\n      additionalData\n    );\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signupUser({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserauth(user, additionalData);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}