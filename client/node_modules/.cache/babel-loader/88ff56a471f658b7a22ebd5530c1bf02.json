{"ast":null,"code":"import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const {\n    user\n  } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  const {\n    user\n  } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser) {\n  try {\n    const userRef = yield call(createUserProfileDocument, authUser);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/user/user.sagas.js"],"names":["signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","googleProvider","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","UserActionTypes","signOut","signInWithGoogle","user","getSnapshotFromUserauth","signInWithEmail","payload","email","password","authUser","userRef","userSnapshot","id","data","error","isUserAuthenticated","userAuth","logUserOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","signupUser","userSagas"],"mappings":"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","sourcesContent":["import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n} from \"./user.actions\";\nimport { UserActionTypes } from \"./user.types\";\nimport { signOut } from \"firebase/auth\";\n\nfunction* signInWithGoogle() {\n  const { user } = yield signInWithPopup(auth, googleProvider);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n  const { user } = yield signInWithEmailAndPassword(auth, email, password);\n  yield getSnapshotFromUserauth(user);\n}\n\nfunction* getSnapshotFromUserauth(authUser) {\n  try {\n    const userRef = yield call(createUserProfileDocument, authUser);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserauth(userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\n\nexport function* logUserOut() {\n  try {\n    yield signOut(auth);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, logUserOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupUser)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}