{"ast":null,"code":"var _jsxFileName = \"/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { ButtonsContainer, SigninContainer, TitleContainer } from \"./sign-in.styles\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      startEmailSignIn\n    } = this.props;\n    const emailAndPassword = this.state;\n    startEmailSignIn(emailAndPassword);\n  };\n\n  handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    startGoogleSignIn\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(SigninContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Signin with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: startGoogleSignIn,\n          isGoogleSignIn: true,\n          children: \"SignIn with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"LC13QyJKdExJEu/LND10L6GL9D0=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  startGoogleSignIn: () => dispatch(googleSignInStart()),\n  startEmailSignIn: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","CustomButton","FormInput","ButtonsContainer","SigninContainer","TitleContainer","emailSignInStart","googleSignInStart","connect","SignIn","userCredentials","setCredentials","useState","email","password","handleSubmit","event","preventDefault","startEmailSignIn","props","emailAndPassword","state","handleChange","name","value","target","setState","startGoogleSignIn","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,kBAJP;AAKA,SACEC,gBADF,EAEEC,iBAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,cAAlB,IAAoCC,QAAQ,CAAC;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAAlD;;AAEAC,EAAAA,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKC,KAAlC;AACA,UAAMC,gBAAgB,GAAG,KAAKC,KAA9B;AACAH,IAAAA,gBAAgB,CAACE,gBAAD,CAAhB;AACD,GALD;;AAOAE,EAAAA,YAAY,GAAIN,KAAD,IAAW;AACxB,UAAM;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBR,KAAK,CAACS,MAA9B;AACA,SAAKC,QAAL,CAAc;AAAE,OAACH,IAAD,GAAQC;AAAV,KAAd;AACD,GAHD;;AAKE,QAAM;AAAEG,IAAAA;AAAF,MAAwB,KAAKR,KAAnC;AACA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWR,KAHpB;AAIE,QAAA,YAAY,EAAE,KAAKS,YAJrB;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWP,QAHpB;AAIE,QAAA,YAAY,EAAE,KAAKQ,YAJrB;AAKE,QAAA,KAAK,EAAC,UALR;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,gBAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEK,iBAFX;AAGE,UAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAnDH;;GAAMlB,M;;KAAAA,M;;AAqDN,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,iBAAiB,EAAE,MAAME,QAAQ,CAACtB,iBAAiB,EAAlB,CADO;AAExCW,EAAAA,gBAAgB,EAAGE,gBAAD,IAChBS,QAAQ,CAACvB,gBAAgB,CAACc,gBAAD,CAAjB;AAH8B,CAAf,CAA3B;;AAMA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCnB,MAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport {\n  ButtonsContainer,\n  SigninContainer,\n  TitleContainer,\n} from \"./sign-in.styles\";\nimport {\n  emailSignInStart,\n  googleSignInStart,\n} from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({email: \"\", password: \"\"})\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { startEmailSignIn } = this.props;\n    const emailAndPassword = this.state;\n    startEmailSignIn(emailAndPassword);\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n    const { startGoogleSignIn } = this.props;\n    return (\n      <SigninContainer>\n        <TitleContainer>I already have an account</TitleContainer>\n        <span>Signin with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <ButtonsContainer>\n            <CustomButton type=\"submit\">Sign In</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={startGoogleSignIn}\n              isGoogleSignIn\n            >\n              SignIn with Google\n            </CustomButton>\n          </ButtonsContainer>\n        </form>\n      </SigninContainer>\n    );\n  }\n\nconst mapDispatchToProps = (dispatch) => ({\n  startGoogleSignIn: () => dispatch(googleSignInStart()),\n  startEmailSignIn: (emailAndPassword) =>\n    dispatch(emailSignInStart(emailAndPassword)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}