{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { takeEvery } from \"redux-saga/effects\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { transformCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionRef = collection(db, \"collections\");\n    const snapshot = getDocs(collectionRef);\n    const collectionsMap = transformCollectionsSnapshotToMap(snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport { fetchCollectionsAsync, fetchCollectionsStart };","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/redux/shop/shop.sagas.js"],"names":["ShopActionTypes","takeEvery","collection","getDocs","transformCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","db","snapshot","collectionsMap","put","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,iCAAT,QAAkD,+BAAlD;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;;AAEA,UAAUC,qBAAV,GAAkC;AAC9B,MAAI;AACA,UAAMC,aAAa,GAAGN,UAAU,CAACO,EAAD,EAAK,aAAL,CAAhC;AACA,UAAMC,QAAQ,GAAGP,OAAO,CAACK,aAAD,CAAxB;AACA,UAAMG,cAAc,GAAGP,iCAAiC,CAACM,QAAD,CAAxD;AACA,UAAME,GAAG,CAACN,uBAAuB,CAACK,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOE,KAAP,EAAc;AACZ,UAAMD,GAAG,CAACP,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;;AAED,UAAUC,qBAAV,GAAkC;AAC9B,QAAMd,SAAS,CAACD,eAAe,CAACgB,uBAAjB,EAA0CT,qBAA1C,CAAf;AACH;;AAED,SAAQA,qBAAR,EAA+BQ,qBAA/B","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\nimport { takeEvery } from \"redux-saga/effects\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { transformCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n    try {\n        const collectionRef = collection(db, \"collections\");\n        const snapshot = getDocs(collectionRef);\n        const collectionsMap = transformCollectionsSnapshotToMap(snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }  \n}\n\nfunction* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n} \n\nexport {fetchCollectionsAsync, fetchCollectionsStart}"]},"metadata":{},"sourceType":"module"}