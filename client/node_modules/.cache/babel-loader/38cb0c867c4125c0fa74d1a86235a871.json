{"ast":null,"code":"var _jsxFileName = \"/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { ButtonsContainer, SigninContainer, TitleContainer } from \"./sign-in.styles\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      console.log(\"sign in regular\");\n      const {\n        startEmailSignIn\n      } = this.props;\n      event.preventDefault();\n      const emailAndPassword = this.state;\n      startEmailSignIn(emailAndPassword);\n    };\n\n    this.check = () => {\n      console.log(\"check!\");\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      startGoogleSignIn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SigninContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Signin with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: this.check,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: startGoogleSignIn,\n            isGoogleSignIn: true,\n            children: \"SignIn with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  startGoogleSignIn: () => dispatch(googleSignInStart()),\n  startEmailSignIn: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","CustomButton","FormInput","ButtonsContainer","SigninContainer","TitleContainer","emailSignInStart","googleSignInStart","connect","SignIn","constructor","handleSubmit","event","console","log","startEmailSignIn","props","preventDefault","emailAndPassword","state","check","handleChange","name","value","target","setState","email","password","render","startGoogleSignIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport {\n  ButtonsContainer,\n  SigninContainer,\n  TitleContainer,\n} from \"./sign-in.styles\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleSubmit = async (event) => {\n    console.log(\"sign in regular\")\n    const { startEmailSignIn } = this.props\n    event.preventDefault();\n    const emailAndPassword = this.state;\n    startEmailSignIn(emailAndPassword)\n  };\n\n  check = () => {\n    console.log(\"check!\")\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { startGoogleSignIn } = this.props;\n    return (\n      <SigninContainer>\n        <TitleContainer>I already have an account</TitleContainer>\n        <span>Signin with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            label=\"email\"\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n          />\n          <ButtonsContainer>\n            <CustomButton type=\"button\" onClick={this.check}>Sign In</CustomButton>\n            <CustomButton type=\"button\" onClick={startGoogleSignIn} isGoogleSignIn>\n              SignIn with Google\n            </CustomButton>\n          </ButtonsContainer>\n        </form>\n      </SigninContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  startGoogleSignIn: () => dispatch(googleSignInStart()),\n  startEmailSignIn: (emailAndPassword) => dispatch(emailSignInStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}