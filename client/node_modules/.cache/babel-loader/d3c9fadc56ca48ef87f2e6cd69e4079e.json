{"ast":null,"code":"import _objectSpread from\"/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/node_modules/@babel/runtime/regenerator/index.js\";import{initializeApp}from\"firebase/app\";import{doc,getDoc,setDoc,getFirestore}from\"firebase/firestore\";import{getAuth,signInWithPopup,GoogleAuthProvider}from\"firebase/auth\";var config={apiKey:\"AIzaSyAoIpJODD_sNFWjtRVFL4zf1ujf7NpIxjQ\",authDomain:\"ladda-store.firebaseapp.com\",projectId:\"ladda-store\",storageBucket:\"ladda-store.appspot.com\",messagingSenderId:\"980174304099\",appId:\"1:980174304099:web:bc2fb18d33200c89e69956\",measurementId:\"G-R3WSPNCT67\"};initializeApp(config);var provider=new GoogleAuthProvider();provider.setCustomParameters({login_hint:\"user@example.com\",prompt:\"select_account\"});export var auth=getAuth();export var signInWithGoogle=function signInWithGoogle(){signInWithPopup(auth,provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar credential=GoogleAuthProvider.credentialFromResult(result);var token=credential.accessToken;// The signed-in user info.\nvar user=result.user;// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The AuthCredential type that was used.\nvar credential=GoogleAuthProvider.credentialFromError(error);// ...\n});};// store specific properties from firebase user object in firestore\nvar db=getFirestore();export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userDocRef,userDocSnap,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userDocRef=doc(db,\"users\",userAuth.uid);_context.next=5;return getDoc(userDocRef);case 5:userDocSnap=_context.sent;console.log(userDocSnap);if(!userDocSnap.exists()){_context.next=11;break;}console.log(\"Document data:\",userDocSnap.data());_context.next=21;break;case 11:console.log(\"User doen't exist. Will create.\");displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=14;_context.next=17;return setDoc(userDocRef,_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 17:_context.next=21;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](14);case 21:return _context.abrupt(\"return\",userDocRef);case 22:case\"end\":return _context.stop();}}},_callee,null,[[14,19]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/audrey/Documents/REACT/PORTFOLIO/fashion-store/src/firebase/firebase.utils.js"],"names":["initializeApp","doc","getDoc","setDoc","getFirestore","getAuth","signInWithPopup","GoogleAuthProvider","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","setCustomParameters","login_hint","prompt","auth","signInWithGoogle","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","db","createUserProfileDocument","userAuth","additionalData","userDocRef","uid","userDocSnap","console","log","exists","data","displayName","createdAt","Date"],"mappings":"gaAAA,OAASA,aAAT,KAA8B,cAA9B,CACA,OAASC,GAAT,CAAcC,MAAd,CAAsBC,MAAtB,CAA8BC,YAA9B,KAAkD,oBAAlD,CACA,OAASC,OAAT,CAAkBC,eAAlB,CAAmCC,kBAAnC,KAA6D,eAA7D,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,6BAFC,CAGbC,SAAS,CAAE,aAHE,CAIbC,aAAa,CAAE,yBAJF,CAKbC,iBAAiB,CAAE,cALN,CAMbC,KAAK,CAAE,2CANM,CAObC,aAAa,CAAE,cAPF,CAAf,CAUAf,aAAa,CAACQ,MAAD,CAAb,CAEA,GAAMQ,CAAAA,QAAQ,CAAG,GAAIT,CAAAA,kBAAJ,EAAjB,CAEAS,QAAQ,CAACC,mBAAT,CAA6B,CAC3BC,UAAU,CAAE,kBADe,CAE3BC,MAAM,CAAE,gBAFmB,CAA7B,EAKA,MAAO,IAAMC,CAAAA,IAAI,CAAGf,OAAO,EAApB,CACP,MAAO,IAAMgB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpCf,eAAe,CAACc,IAAD,CAAOJ,QAAP,CAAf,CACGM,IADH,CACQ,SAACC,MAAD,CAAY,CAChB;AACA,GAAMC,CAAAA,UAAU,CAAGjB,kBAAkB,CAACkB,oBAAnB,CAAwCF,MAAxC,CAAnB,CACA,GAAMG,CAAAA,KAAK,CAAGF,UAAU,CAACG,WAAzB,CACA;AACA,GAAMC,CAAAA,IAAI,CAAGL,MAAM,CAACK,IAApB,CACA;AACD,CARH,EASGC,KATH,CASS,SAACC,KAAD,CAAW,CAChB;AACA,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAxB,CACA,GAAMC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAA3B,CACA;AACA,GAAMC,CAAAA,KAAK,CAAGL,KAAK,CAACK,KAApB,CACA;AACA,GAAMX,CAAAA,UAAU,CAAGjB,kBAAkB,CAAC6B,mBAAnB,CAAuCN,KAAvC,CAAnB,CACA;AACD,CAlBH,EAmBD,CApBM,CAsBP;AACA,GAAMO,CAAAA,EAAE,CAAGjC,YAAY,EAAvB,CACA,MAAO,IAAMkC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,4KAClCD,QADkC,iEAGjCE,UAHiC,CAGpBxC,GAAG,CAACoC,EAAD,CAAK,OAAL,CAAcE,QAAQ,CAACG,GAAvB,CAHiB,uBAIbxC,CAAAA,MAAM,CAACuC,UAAD,CAJO,QAIjCE,WAJiC,eAMvCC,OAAO,CAACC,GAAR,CAAYF,WAAZ,EANuC,IAQnCA,WAAW,CAACG,MAAZ,EARmC,0BASrCF,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BF,WAAW,CAACI,IAAZ,EAA9B,EATqC,+BAWrCH,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACQG,WAZ6B,CAYNT,QAZM,CAY7BS,WAZ6B,CAYhBb,KAZgB,CAYNI,QAZM,CAYhBJ,KAZgB,CAa/Bc,SAb+B,CAanB,GAAIC,CAAAA,IAAJ,EAbmB,yCAiB7B/C,CAAAA,MAAM,CAACsC,UAAD,gBACVO,WAAW,CAAXA,WADU,CAEVb,KAAK,CAALA,KAFU,CAGVc,SAAS,CAATA,SAHU,EAIPT,cAJO,EAjBuB,mIAyBhCC,UAzBgC,wEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyAoIpJODD_sNFWjtRVFL4zf1ujf7NpIxjQ\",\n  authDomain: \"ladda-store.firebaseapp.com\",\n  projectId: \"ladda-store\",\n  storageBucket: \"ladda-store.appspot.com\",\n  messagingSenderId: \"980174304099\",\n  appId: \"1:980174304099:web:bc2fb18d33200c89e69956\",\n  measurementId: \"G-R3WSPNCT67\",\n};\n\ninitializeApp(config);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  login_hint: \"user@example.com\",\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n};\n\n// store specific properties from firebase user object in firestore\nconst db = getFirestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  \n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userDocSnap = await getDoc(userDocRef);\n\n  console.log(userDocSnap);\n\n  if (userDocSnap.exists()) {\n    console.log(\"Document data:\", userDocSnap.data());\n  } else {\n    console.log(\"User doen't exist. Will create.\");\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      // Add a new document in collection \"users\"\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {}\n  }\n  return userDocRef;\n};\n"]},"metadata":{},"sourceType":"module"}